<!DOCTYPE html>
<html>
	<head>
		<title></title>

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
		<meta charset="utf-8">

		<!-- iPad/iPhone specific css below, add after your main css >
		<link rel="stylesheet" media="only screen and (max-device-width: 1024px)" href="ipad.css" type="text/css" />
		<link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="iphone.css" type="text/css" />
		-->
		<link rel="stylesheet" href="js/jquery.mobile-1.2.0.min.css" type="text/css" />
		
        <script type="text/javascript" charset="utf-8" src="js/jquery-1.8.2.min.js"></script>
        <script type="text/javascript" charset="utf-8" src="js/base64.js"></script>
        <script type="text/javascript" charset="utf-8" src="js/aes.js"></script>
        <script type="text/javascript" charset="utf-8" src="js/main.js"></script>
        <script type="text/javascript" charset="utf-8" src="js/cordova.js"></script>
        <script src="js/spin.min.js" type="text/javascript"></script>
        
        <link rel="stylesheet" href="css/iphone.css" type="text/css" />
        <link rel="stylesheet" href="css/android.css" type="text/css" />
        
        <script type="text/javascript">
			$(document).bind( "mobileinit", function() {
				// jQuery Mobile フレームワークの設定変更は、ここで行なってください！
				$.support.cors = true;
				$.mobile.allowCrossDomainPages = true;
			});

			$(document).ready(function(){
				document.addEventListener("deviceready", onDeviceReady, false);
			});

			function onDeviceReady() {
				var scd = {
					card_company: '',
					card_holder: '',
					card_number: '',
					year: '',
					month: '',
					card_security_code: ''
				}
				setLocalStorage('scd', JSON.stringify(scd));
				
				$.ajaxSetup({
					timeout: 5000
				});
				
				$('#loading').css('display', 'block');
				// ネットワークの判定
				// check_network();
				setLocalStorage('barcode', 'none');
				setLocalStorage('before', 'setting.html');
				setLocalStorage('first', 'true');

				// URLの取得
				$.ajax({
					type: "POST",
					url: "http://exorder.jp/app/send_init.php",
					data:"id1=alivecast&id2=sugoi",
					success: function(rdata){
						console.log("onDeviceReady::正常にテキストを読み込みました。 url: " + rdata.url);
						onReadyFile2(rdata);
					},
					error: function(){
						networdERR(alertCallBack,'通信エラー');
						return false;
					}
				});
			}

			// alertCallBack -----------------------------------------------------------------------
			function alertCallBack() {
				$("#loading").css("display","none");
				$("#top").css("display","block");
				// window.location.href = 'index.html';
			}

            // 設定ファイルの接続に成功の場合
			function onReadyFile2(rdata) {
				// ファイルの読み込み
				console.log("Start order_attention");
				var fname = 'order_attention';
				getFile(fname,onGetOrderAttentionOK,onGetOrderAttentionNG);

				function onGetOrderAttentionOK(json){
					console.log("正常にorder_attentionを読み込みました。");
					if(json.order_attention && (json.order_attention != '' || json.order_attention != null)){
						jsonObj = {order_attention: 'enable'};
						setFile(fname, jsonObj, onReadyFile3(rdata), onReadyFile3(rdata));
					}
				}

				function onGetOrderAttentionNG(){
					console.log("err : order_attention NO");
					onReadyFile3(rdata);
				}
			}

			function onReadyFile3(rdata) {
				// 設定ファイルの読み込み
				console.log("Start ordering");
				var fname = 'ordering';
				getFile(fname,onGetOrderingOK,onGetOrderingNG);

				function onGetOrderingOK(json){
					console.log("正常にテキストを読み込みました。 json.url: " + json.url);
					json['url']   = rdata.url;
					json['http']  = rdata.http;
					json['https'] = rdata.https;
					if(json.app_code){
						updateOradering(json);
					}else{
						initOradering(json);
					}
				}

				function onGetOrderingNG(){
					console.log("err : ordering NO");
					initOradering(rdata);
				}
			}

			function initOradering(data){
				console.log("insert : ordering");
				// 設定ファイル新規追加
				var datalist = {
					customer_id: "0",
					app_ver: "0100",
					app_code: "leica_m3",
					url: data.url,
					http: data.http,
					https: data.https
				}
				// ファイル処理
				var fname = 'ordering';
				setFile(fname, datalist, goIntro, goIntro);

				function goIntro(){
					// LocalStorageの初期化(nullポインター対策)
					var hash = {};
					setLocalStorage('page', 'tr_android.html');
					setLocalStorage('appFirst', 'true');
					setLocalStorage('shippingCost', 'disable');
					setLocalStorage('inputPasscode', 'true');
					setLocalStorage('inputedPass', 'false');
					setLocalStorage('cancelAttention', 'true');
					setLocalStorage('touchMonth', 'false');
					setLocalStorage('touchDate', 'false');
					setLocalStorage('passInputBtn', 'setting');
					setLocalStorage('purchased_item_flg', '');
					setLocalStorage('kbn', '');
					setLocalStorage('order_params', hash);
					setLocalStorage('before', 'barcode.html');
					setLocalStorage('passTime', parseInt(new Date() / 1000));
					setLocalStorage('cancelAttention', 'true');
					setLocalStorage("qr_id", '');
					setLocalStorage("item_version", '');
					setLocalStorage("customer_id", '');
					setLocalStorage("order", '');
					setLocalStorage('show_item_params','');
					setLocalStorage('passcodeNew_customer_pass', '');
					setLocalStorage('passcodeNew_re_pass', '');
					setLocalStorage('passcodeNew_customer_qes', '');
					setLocalStorage('passcodeNew_customer_ans', '');
					setLocalStorage('date', '');
					setLocalStorage('scd', '');
					setLocalStorage('barcode', 'none');
					setLocalStorage('order_amount', 1);
					location.href="website_all.html";
					return false;
				}
			}

			function updateOradering(udata){
				console.log("update : ordering");
				// 設定ファイル上書き
				var datalist = udata;
				datalist['app_ver']  = "0100";
				datalist['app_code'] = "leica_m3";
				// ファイル処理
				var fname = 'ordering';
				setFile(fname, datalist, goBarcode, goBarcode);

				function goBarcode(){
					location.href="barcode.html";
					return false;
				}

			}


		</script>
    	<script type="text/javascript" charset="utf-8" src="js/jquery.mobile-1.2.0.min.js"></script>

	</head>

	<body>
		<div data-role="page" data-add-back-btn="false">

			<!-- loading -->
			<div class="loading" data-role="content" id="loading">
				<div class="loading_box">
					<p>しばらくおまちください</p>
					<div id="loadingImg" class="square"></div>
					<script>
						// spin setting
						var opts = {
							lines : 15, // The number of lines to draw
							length : 28, // The length of each line
							width : 5, // The line thickness
							radius : 14, // The radius of the inner circle
							corners : 1, // Corner roundness (0..1)
							rotate : 0, // The rotation offset
							color : '#fff', // #rgb or #rrggbb
							speed : 1, // Rounds per second
							trail : 60, // Afterglow percentage
							shadow : false, // Whether to render a shadow
							hwaccel : false, // Whether to use hardware acceleration
							className : 'spinner', // The CSS class to assign to the spinner
							zIndex : 2e9//, // The z-index (defaults to 2000000000)
						//	top : 'auto', // Top position relative to parent in px
						//	left : 'auto' // Left position relative to parent in px
						};
						var target = document.getElementById('loadingImg');
						var spinner = new Spinner(opts).spin(target);
					</script>
				</div>
			</div>
            
			<!-- reconnection -->
			<div class="reconnection" data-role="content" id="top" style="display:none;">
				<div class="reconnection_box">
					<p>ただいま通信が繋がりにくくなっております。しばらくお待ちしてから、接続しなおしてください。</p>
					<div class="btn_outer">
						<a class="btn_next" href="index.html" data-role="button" data-ajax="false">再接続する</a>
						<!-- /btn_outer -->
					</div>
					<!-- /reconnection_box -->
				</div>
				<!-- /dr-content -->
			</div>
            

		</div><!-- page-->
	</body>
</html>

